Seven Concurrency Models In Seven Weeks

1. Thread
- Race Condition : the behavior of an electronic, software or other system where the output is dependent on the sequence or timing of other uncontrollable events. It becomes a bug when events do not happen in the order the programmer intended. The term originates with the idea of two signals racing each other to influence the output first.
- Memore Visibility : 한 Thread에서 변경한 특정 메모리의 값이, 다른 Thread에서 제대로 읽어지는지
- Deadlock : In concurrent computing, a deadlock occurs when two competing actions wait for the other to finish, and thus neither ever does.
reference => http://www.cs.umd.edu/~pugh/java/memoryModel/index.html#additional


Spring Boot In Action

1. 스프링 시작하기	
2. 첫 번째 스프링 부트 애플리케이션 개발하기
3. 구성을 사용자화하기
  - when adding a starter, how can I test all dependencies that already exist or ensure that it is stable?
4. 스프링 부트 테스트하기
  - 스프링에서 Junit 이용해서 테스트할 때 어노테이션의 의미를 잘 모르고 썼었는데 조금 이해가 됐다.
5. 스프링 부트 CLI로 그루비 시작하기	~118

- 스프링을 써서 개발한지 몇 년이 되었는데 학습되지 않은 상태에서 쓰고 있었다. 공식 문서나 책 같은 걸 제대로 본 적이 없는 것 같아 부끄러웠다.
